{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ladda/js/ladda.js","webpack:///./node_modules/spin.js/spin.js","webpack:///./resources/js/app/login.js"],"names":["window","Ladda","require","isDocumentReady","document","readyState","documentElement","doScroll","callback","bind","addEventListener"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,eAAe;;AAEf,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,kBAAkB,EAAE;;AAEvD,eAAe;;AAEf,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,6C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,gBAAgB,EAAE;AACtD;;AAEA,eAAe;;AAEf,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA,gBAAgB,oBAAoB;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACO;;AAEP,4CAA4C,SAAS;AACrD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,+CAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE;;AAEF;;;;;;;;;;;;;AC3VA;AAAA;AAAA,gBAAgB,SAAI,IAAI,SAAI;AAC5B,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1LAA,MAAM,CAACC,KAAP,GAAeC,mBAAO,CAAC,+CAAD,CAAtB;;AAEA,CAAC,YAAY;AACX,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIC,QAAQ,CAACC,UAAT,KAAwB,UAA5B,EAAwC;AACtC,aAAO,IAAP;AACD;;AAED,WAAOD,QAAQ,CAACC,UAAT,KAAwB,SAAxB,IAAqC,CAACD,QAAQ,CAACE,eAAT,CAAyBC,QAAtE;AACD,GAND;;AAQA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAY;AAC3B,QAAI,OAAOP,KAAP,KAAiB,WAArB,EAAkC;AAChCA,WAAK,CAACQ,IAAN,CAAW,qBAAX;AACD;AACF,GAJD;;AAMA,MAAIN,eAAe,EAAnB,EAAuB;AACrBK,YAAQ;AACT,GAFD,MAEO;AACLJ,YAAQ,CAACM,gBAAT,CAA0B,kBAA1B,EAA8CF,QAA9C;AACD;AACF,CApBD,I","file":"/js/login.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/*!\r\n * Ladda\r\n * http://lab.hakim.se/ladda\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2018 Hakim El Hattab, http://hakim.se\r\n */\r\n\r\n import {Spinner} from 'spin.js';\r\n\r\n// All currently instantiated instances of Ladda\r\nvar ALL_INSTANCES = [];\r\n\r\n/**\r\n * Creates a new instance of Ladda which wraps the\r\n * target button element.\r\n *\r\n * @return An API object that can be used to control\r\n * the loading animation state.\r\n */\r\nexport function create( button ) {\r\n\r\n\tif( typeof button === 'undefined' ) {\r\n\t\tconsole.warn( \"Ladda button target must be defined.\" );\r\n\t\treturn;\r\n\t}\r\n\r\n\t// The button must have the class \"ladda-button\"\r\n\tif ( !button.classList.contains('ladda-button') ) {\r\n\t\tbutton.classList.add( 'ladda-button' );\r\n\t}\r\n\r\n\t// Style is required, default to \"expand-right\"\r\n\tif( !button.hasAttribute( 'data-style' ) ) {\r\n\t\tbutton.setAttribute( 'data-style', 'expand-right' );\r\n\t}\r\n\r\n\t// The text contents must be wrapped in a ladda-label\r\n\t// element, create one if it doesn't already exist\r\n\tif( !button.querySelector( '.ladda-label' ) ) {\r\n\t\tvar laddaLabel = document.createElement( 'span' );\r\n\t\tladdaLabel.className = 'ladda-label';\r\n\t\twrapContent( button, laddaLabel );\r\n\t}\r\n\r\n\t// The spinner component\r\n\tvar spinner,\r\n\t\tspinnerWrapper = button.querySelector( '.ladda-spinner' );\r\n\r\n\t// Wrapper element for the spinner\r\n\tif( !spinnerWrapper ) {\r\n\t\tspinnerWrapper = document.createElement( 'span' );\r\n\t\tspinnerWrapper.className = 'ladda-spinner';\r\n\t}\r\n\r\n\tbutton.appendChild( spinnerWrapper );\r\n\r\n\t// Timer used to delay starting/stopping\r\n\tvar timer;\r\n\r\n\tvar instance = {\r\n\r\n\t\t/**\r\n\t\t * Enter the loading state.\r\n\t\t */\r\n\t\tstart: function() {\r\n\r\n\t\t\t// Create the spinner if it doesn't already exist\r\n\t\t\tif( !spinner ) {\r\n\t\t\t\tspinner = createSpinner( button );\r\n\t\t\t}\r\n\r\n\t\t\tbutton.disabled = true;\r\n\t\t\tbutton.setAttribute( 'data-loading', '' );\r\n\r\n\t\t\tclearTimeout( timer );\r\n\t\t\tspinner.spin( spinnerWrapper );\r\n\r\n\t\t\tthis.setProgress( 0 );\r\n\r\n\t\t\treturn this; // chain\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Enter the loading state, after a delay.\r\n\t\t */\r\n\t\tstartAfter: function( delay ) {\r\n\r\n\t\t\tclearTimeout( timer );\r\n\t\t\ttimer = setTimeout( function() { instance.start(); }, delay );\r\n\r\n\t\t\treturn this; // chain\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Exit the loading state.\r\n\t\t */\r\n\t\tstop: function() {\r\n\r\n\t\t\tif (instance.isLoading()) {\r\n\t\t\t\tbutton.disabled = false;\r\n\t\t\t\tbutton.removeAttribute( 'data-loading' );\t\r\n\t\t\t}\r\n\r\n\t\t\t// Kill the animation after a delay to make sure it\r\n\t\t\t// runs for the duration of the button transition\r\n\t\t\tclearTimeout( timer );\r\n\r\n\t\t\tif( spinner ) {\r\n\t\t\t\ttimer = setTimeout( function() { spinner.stop(); }, 1000 );\r\n\t\t\t}\r\n\r\n\t\t\treturn this; // chain\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Toggle the loading state on/off.\r\n\t\t */\r\n\t\ttoggle: function() {\r\n\t\t\treturn this.isLoading() ? this.stop() : this.start();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the width of the visual progress bar inside of\r\n\t\t * this Ladda button\r\n\t\t *\r\n\t\t * @param {Number} progress in the range of 0-1\r\n\t\t */\r\n\t\tsetProgress: function( progress ) {\r\n\r\n\t\t\t// Cap it\r\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\r\n\r\n\t\t\tvar progressElement = button.querySelector( '.ladda-progress' );\r\n\r\n\t\t\t// Remove the progress bar if we're at 0 progress\r\n\t\t\tif( progress === 0 && progressElement && progressElement.parentNode ) {\r\n\t\t\t\tprogressElement.parentNode.removeChild( progressElement );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( !progressElement ) {\r\n\t\t\t\t\tprogressElement = document.createElement( 'div' );\r\n\t\t\t\t\tprogressElement.className = 'ladda-progress';\r\n\t\t\t\t\tbutton.appendChild( progressElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprogressElement.style.width = ( ( progress || 0 ) * button.offsetWidth ) + 'px';\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tisLoading: function() {\r\n\r\n\t\t\treturn button.hasAttribute( 'data-loading' );\r\n\r\n\t\t},\r\n\r\n\t\tremove: function() {\r\n\r\n\t\t\tclearTimeout( timer );\r\n\r\n\t\t\tbutton.disabled = false;\r\n\t\t\tbutton.removeAttribute( 'data-loading' );\r\n\r\n\t\t\tif( spinner ) {\r\n\t\t\t\tspinner.stop();\r\n\t\t\t\tspinner = null;\r\n\t\t\t}\r\n\r\n\t\t\tALL_INSTANCES.splice( ALL_INSTANCES.indexOf(instance), 1 );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tALL_INSTANCES.push( instance );\r\n\r\n\treturn instance;\r\n\r\n}\r\n\r\n/**\r\n * Binds the target buttons to automatically enter the\r\n * loading state when clicked.\r\n *\r\n * @param target Either an HTML element or a CSS selector.\r\n * @param options\r\n *          - timeout Number of milliseconds to wait before\r\n *            automatically cancelling the animation.\r\n *          - callback A function to be called with the Ladda\r\n *            instance when a target button is clicked.\r\n */\r\nexport function bind( target, options ) {\r\n\r\n\tvar targets;\r\n\r\n\tif( typeof target === 'string' ) {\r\n\t\ttargets = document.querySelectorAll( target );\r\n\t}\r\n\telse if( typeof target === 'object' ) {\r\n\t\ttargets = [ target ];\r\n\t} else {\r\n\t\tthrow new Error('target must be string or object');\r\n\t}\r\n\r\n\toptions = options || {};\r\n\r\n\tfor( var i = 0; i < targets.length; i++ ) {\r\n\t\tbindElement(targets[i], options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Stops ALL current loading animations.\r\n */\r\nexport function stopAll() {\r\n\r\n\tfor( var i = 0, len = ALL_INSTANCES.length; i < len; i++ ) {\r\n\t\tALL_INSTANCES[i].stop();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n* Get the first ancestor node from an element, having a\r\n* certain type.\r\n*\r\n* @param elem An HTML element\r\n* @param type an HTML tag type (uppercased)\r\n*\r\n* @return An HTML element\r\n*/\r\nfunction getAncestorOfTagType( elem, type ) {\r\n\r\n\twhile ( elem.parentNode && elem.tagName !== type ) {\r\n\t\telem = elem.parentNode;\r\n\t}\r\n\r\n\treturn ( type === elem.tagName ) ? elem : undefined;\r\n\r\n}\r\n\r\nfunction createSpinner( button ) {\r\n\r\n\tvar height = button.offsetHeight,\r\n\t\tspinnerColor,\r\n\t\tspinnerLines;\r\n\r\n\tif( height === 0 ) {\r\n\t\t// We may have an element that is not visible so\r\n\t\t// we attempt to get the height in a different way\r\n\t\theight = parseFloat( window.getComputedStyle( button ).height );\r\n\t}\r\n\r\n\t// If the button is tall we can afford some padding\r\n\tif( height > 32 ) {\r\n\t\theight *= 0.8;\r\n\t}\r\n\r\n\t// Prefer an explicit height if one is defined\r\n\tif( button.hasAttribute( 'data-spinner-size' ) ) {\r\n\t\theight = parseInt( button.getAttribute( 'data-spinner-size' ), 10 );\r\n\t}\r\n\r\n\t// Allow buttons to specify the color of the spinner element\r\n\tif( button.hasAttribute( 'data-spinner-color' ) ) {\r\n\t\tspinnerColor = button.getAttribute( 'data-spinner-color' );\r\n\t}\r\n\r\n\t// Allow buttons to specify the number of lines of the spinner\r\n\tif( button.hasAttribute( 'data-spinner-lines' ) ) {\r\n\t\tspinnerLines = parseInt( button.getAttribute( 'data-spinner-lines' ), 10 );\r\n\t}\r\n\r\n\tvar radius = height * 0.2,\r\n\t\tlength = radius * 0.6,\r\n\t\twidth = radius < 7 ? 2 : 3;\r\n\r\n\treturn new Spinner( {\r\n\t\tcolor: spinnerColor || '#fff',\r\n\t\tlines: spinnerLines || 12,\r\n\t\tradius: radius,\r\n\t\tlength: length,\r\n\t\twidth: width,\r\n\t\tanimation: 'ladda-spinner-line-fade',\r\n\t\tzIndex: 'auto',\r\n\t\ttop: 'auto',\r\n\t\tleft: 'auto',\r\n\t\tclassName: ''\r\n\t} );\r\n\r\n}\r\n\r\nfunction wrapContent( node, wrapper ) {\r\n\r\n\tvar r = document.createRange();\r\n\tr.selectNodeContents( node );\r\n\tr.surroundContents( wrapper );\r\n\tnode.appendChild( wrapper );\r\n\r\n}\r\n\r\nfunction bindElement( element, options ) {\r\n\tif( typeof element.addEventListener !== 'function' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar instance = create( element );\r\n\tvar timeout = -1;\r\n\r\n\telement.addEventListener( 'click', function() {\r\n\r\n\t\t// If the button belongs to a form, make sure all the\r\n\t\t// fields in that form are filled out\r\n\t\tvar valid = true;\r\n\t\tvar form = getAncestorOfTagType( element, 'FORM' );\r\n\r\n\t\tif( typeof form !== 'undefined' && !form.hasAttribute('novalidate') ) {\r\n\t\t\t// Modern form validation\r\n\t\t\tif( typeof form.checkValidity === 'function' ) {\r\n\t\t\t\tvalid = form.checkValidity();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( valid ) {\r\n\t\t\t// This is asynchronous to avoid an issue where disabling\r\n\t\t\t// the button prevents forms from submitting\r\n\t\t\tinstance.startAfter( 1 );\r\n\r\n\t\t\t// Set a loading timeout if one is specified\r\n\t\t\tif( typeof options.timeout === 'number' ) {\r\n\t\t\t\tclearTimeout( timeout );\r\n\t\t\t\ttimeout = setTimeout( instance.stop, options.timeout );\r\n\t\t\t}\r\n\r\n\t\t\t// Invoke callbacks\r\n\t\t\tif( typeof options.callback === 'function' ) {\r\n\t\t\t\toptions.callback.apply( null, [ instance ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}, false );\r\n\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign({}, defaults, opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n","window.Ladda = require('ladda');\r\n\r\n(function () {\r\n  const isDocumentReady = () => {\r\n    if (document.readyState === \"complete\") {\r\n      return true;\r\n    }\r\n\r\n    return document.readyState !== \"loading\" && !document.documentElement.doScroll;\r\n  };\r\n\r\n  const callback = function () {\r\n    if (typeof Ladda !== 'undefined') {\r\n      Ladda.bind('button[type=submit]');\r\n    }\r\n  };\r\n\r\n  if (isDocumentReady()) {\r\n    callback();\r\n  } else {\r\n    document.addEventListener(\"DOMContentLoaded\", callback);\r\n  }\r\n})();\r\n"],"sourceRoot":""}